require 'dotenv'

default_platform(:android)

platform :android do
  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    # Prompt user to select the environment
    env = UI.select("Which environment do you want to use?", ["development", "staging", "production"])
    UI.message("You selected environment: #{env}")
    
    # Define the .env file path
    env_file_path = ".env.#{env}"

    # Check if the .env file exists
    unless File.exist?(env_file_path)
      UI.user_error!("Environment file not found: #{env_file_path}. Please make sure it exists.")
    end

    # Load the .env file
    Dotenv.load(env_file_path)
    UI.message("Loaded environment variables from #{env_file_path}")

    # Run the gradle build
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      properties: {
        "android.injected.signing.store.file" => ENV['MYAPP_STORE_FILE'],
        "android.injected.signing.store.password" => ENV['MYAPP_STORE_PASSWORD'],
        "android.injected.signing.key.alias" => ENV['MYAPP_KEY_ALIAS'],
        "android.injected.signing.key.password" => ENV['MYAPP_KEY_PASSWORD']
      }
    )

    # Upload the AAB to the Play Store (internal testing)
    upload_to_play_store(
      track: 'internal'
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean bundleRelease")
    upload_to_play_store(
      track: 'internal',
      skip_upload_metadata: true, # Skips metadata upload
      skip_upload_images: true,  # Skips image upload
      skip_upload_screenshots: true # Skips screenshot upload
    )
  end
end
