# # This file contains the fastlane.tools configuration
# # You can find the documentation at https://docs.fastlane.tools
# #
# # For a list of all available actions, check out
# #
# #     https://docs.fastlane.tools/actions
# #
# # For a list of all available plugins, check out
# #
# #     https://docs.fastlane.tools/plugins/available-plugins
# #

# # Uncomment the line if you want fastlane to automatically update itself
# # update_fastlane

# default_platform(:android)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end

#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
  
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end

#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end
# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    # Hardcoded credentials for the keystore
    releaseFilePath = "/Users/shiv/keystores/upload-keystore.jks"
    store_password = "Validus.2025@a"
    key_alias = "upload"
    key_password = "Validus.2025@a"

    # Clean and build the app with signing credentials
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'Release',
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => key_alias,
        "android.injected.signing.key.password" => key_password
      }
    )

    # Upload the AAB to the Play Store (internal testing)
    upload_to_play_store(
      track: 'internal'
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean bundleRelease")
    # upload_to_play_store
    upload_to_play_store(
     track: 'internal',
     skip_upload_metadata: true, # Skips metadata upload
     skip_upload_images: true,  # Skips image upload
     skip_upload_screenshots: true # Skips screenshot upload
   )
  end
end
